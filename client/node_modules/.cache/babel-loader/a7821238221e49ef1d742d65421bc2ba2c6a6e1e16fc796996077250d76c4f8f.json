{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\chat-app\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import logo from \"../assets/logo.jpeg\";\n// import { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import Toaster from \"./Toaster\";\n\n// function Login() {\n//   const [showlogin, setShowLogin] = useState(false);\n//   const [data, setData] = useState({ name: \"\", email: \"\", password: \"\" });\n//   const [loading, setLoading] = useState(false);\n\n//   const [logInStatus, setLogInStatus] = React.useState(\"\");\n//   const [signInStatus, setSignInStatus] = React.useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const changeHandler = (e) => {\n//     setData({ ...data, [e.target.name]: e.target.value });\n//   };\n\n//   const loginHandler = async (e) => {\n//     setLoading(true);\n//     console.log(data);\n//     try {\n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n\n//       const response = await axios.post(\n//         \"http://localhost:8080/user/login/\",\n//         data,\n//         config\n//       );\n//       console.log(\"Login : \", response);\n//       setLogInStatus({ msg: \"Success\", key: Math.random() });\n//       setLoading(false);\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\n//       navigate(\"/app/welcome\");\n//     } catch (error) {\n//       setLogInStatus({\n//         msg: \"Invalid User name or Password\",\n//         key: Math.random(),\n//       });\n//     }\n//     setLoading(false);\n//   };\n\n//   // const signUpHandler = async () => {\n//   //   setLoading(true);\n//   //   try {\n//   //     const config = {\n//   //       headers: {\n//   //         \"Content-type\": \"application/json\",\n//   //       },\n//   //     };\n\n//   //     const response = await axios.post(\n//   //       \"http://localhost:8080/user/register/\",\n//   //       data,\n//   //       config\n//   //     );\n//   //     console.log(response);\n//   //     setSignInStatus({ msg: \"Success\", key: Math.random() });\n//   //     navigate(\"/app/welcome\");\n//   //     localStorage.setItem(\"userData\", JSON.stringify(response));\n//   //     setLoading(false);\n//   //   } catch (error) {\n//   //     console.log(error);\n//   //     if (error.response.status === 405) {\n//   //       setLogInStatus({\n//   //         msg: \"User with this email ID already Exists\",\n//   //         key: Math.random(),\n//   //       });\n//   //     }\n//   //     if (error.response.status === 406) {\n//   //       setLogInStatus({\n//   //         msg: \"User Name already Taken, Please take another one\",\n//   //         key: Math.random(),\n//   //       });\n//   //     }\n//   //     setLoading(false);\n//   //   }\n//   // };\n\n//   const signUpHandler = async () => {\n//     setLoading(true);\n//     try {\n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n\n//       const response = await axios.post(\n//         \"http://localhost:8080/user/register/\",\n//         data,\n//         config\n//       );\n//       console.log(response);\n\n//       if (response && response.status === 200) {\n//         setSignInStatus({ msg: \"Success\", key: Math.random() });\n//         localStorage.setItem(\"userData\", JSON.stringify(response.data));\n//         navigate(\"/app/welcome\");\n//       } else {\n//         setSignInStatus({\n//           msg: \"Unexpected response from the server\",\n//           key: Math.random(),\n//         });\n//       }\n//     } catch (error) {\n//       console.log(error);\n//       if (error.response) {\n//         if (error.response.status === 405) {\n//           setSignInStatus({\n//             msg: \"User with this email ID already Exists\",\n//             key: Math.random(),\n//           });\n//         } else if (error.response.status === 406) {\n//           setSignInStatus({\n//             msg: \"User Name already Taken, Please take another one\",\n//             key: Math.random(),\n//           });\n//         } else {\n//           setSignInStatus({\n//             msg: `Error: ${error.response.status} - ${error.response.data.message}`,\n//             key: Math.random(),\n//           });\n//         }\n//       } else {\n//         setSignInStatus({\n//           msg: \"Network error or server is not responding\",\n//           key: Math.random(),\n//         });\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Backdrop\n//         sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n//         open={loading}\n//       >\n//         <CircularProgress color=\"secondary\" />\n//       </Backdrop>\n//       <div className=\"login-container\">\n//         <div className=\"image-container\">\n//           <img src={logo} alt=\"Logo\" className=\"welcome-logo\" />\n//         </div>\n//         {showlogin && (\n//           <div className=\"login-box\">\n//             <p className=\"login-text\">Login to your Account</p>\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter User Name\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"name\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   loginHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"outlined-password-input\"\n//               label=\"Password\"\n//               type=\"password\"\n//               autoComplete=\"current-password\"\n//               color=\"secondary\"\n//               name=\"password\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   loginHandler();\n//                 }\n//               }}\n//             />\n//             <Button\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               onClick={loginHandler}\n//               isLoading\n//             >\n//               Login\n//             </Button>\n//             <p>\n//               Don't have an Account ?{\" \"}\n//               <span\n//                 className=\"hyper\"\n//                 onClick={() => {\n//                   setShowLogin(false);\n//                 }}\n//               >\n//                 Sign Up\n//               </span>\n//             </p>\n//             {logInStatus ? (\n//               <Toaster key={logInStatus.key} message={logInStatus.msg} />\n//             ) : null}\n//           </div>\n//         )}\n//         {!showlogin && (\n//           <div className=\"login-box\">\n//             <p className=\"login-text\">Create your Account</p>\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter User Name\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"name\"\n//               helperText=\"\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter Email Address\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"email\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"outlined-password-input\"\n//               label=\"Password\"\n//               type=\"password\"\n//               autoComplete=\"current-password\"\n//               color=\"secondary\"\n//               name=\"password\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <Button\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               onClick={signUpHandler}\n//             >\n//               Sign Up\n//             </Button>\n//             <p>\n//               Already have an Account ?\n//               <span\n//                 className=\"hyper\"\n//                 onClick={() => {\n//                   setShowLogin(true);\n//                 }}\n//               >\n//                 Log in\n//               </span>\n//             </p>\n//             {signInStatus ? (\n//               <Toaster key={signInStatus.key} message={signInStatus.msg} />\n//             ) : null}\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport logo from \"../assets/logo.jpeg\";\nimport { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Toaster from \"./Toaster\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [logInStatus, setLogInStatus] = useState(\"\");\n  const [signInStatus, setSignInStatus] = useState(\"\");\n  const navigate = useNavigate();\n  const changeHandler = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n  const loginHandler = async e => {\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const response = await axios.post(\"http://localhost:5000/user/login/\", data, config);\n      setLogInStatus({\n        msg: \"Success\",\n        key: Math.random()\n      });\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\n      navigate(\"/app/welcome\");\n    } catch (error) {\n      setLogInStatus({\n        msg: \"Invalid Username or Password\",\n        key: Math.random()\n      });\n    }\n    setLoading(false);\n  };\n  const signUpHandler = async () => {\n    setLoading(true);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const response = await axios.post(\"http://localhost:5000/user/register/\", data, config);\n      setSignInStatus({\n        msg: \"Success\",\n        key: Math.random()\n      });\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\n      navigate(\"/app/welcome\");\n    } catch (error) {\n      if (error.response && error.response.status === 405) {\n        setSignInStatus({\n          msg: \"User with this email ID already exists\",\n          key: Math.random()\n        });\n      } else if (error.response && error.response.status === 406) {\n        setSignInStatus({\n          msg: \"Username already taken, please choose another one\",\n          key: Math.random()\n        });\n      } else {\n        setSignInStatus({\n          msg: \"Unexpected error occurred. Please try again.\",\n          key: Math.random()\n        });\n      }\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: loading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"welcome-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"Login to your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: changeHandler,\n          id: \"standard-basic\",\n          label: \"Enter Username\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          name: \"name\",\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              loginHandler();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: changeHandler,\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          type: \"password\",\n          autoComplete: \"current-password\",\n          color: \"secondary\",\n          name: \"password\",\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              loginHandler();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: loginHandler,\n          disabled: loading,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an Account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hyper\",\n            onClick: () => setShowLogin(false),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), logInStatus ? /*#__PURE__*/_jsxDEV(Toaster, {\n          message: logInStatus.msg\n        }, logInStatus.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), !showLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-text\",\n          children: \"Create your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: changeHandler,\n          id: \"standard-basic\",\n          label: \"Enter Username\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          name: \"name\",\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              signUpHandler();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: changeHandler,\n          id: \"standard-basic\",\n          label: \"Enter Email Address\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          name: \"email\",\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              signUpHandler();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: changeHandler,\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          type: \"password\",\n          autoComplete: \"current-password\",\n          color: \"secondary\",\n          name: \"password\",\n          onKeyDown: event => {\n            if (event.key === \"Enter\") {\n              signUpHandler();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: signUpHandler,\n          disabled: loading,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an Account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hyper\",\n            onClick: () => setShowLogin(true),\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), signInStatus ? /*#__PURE__*/_jsxDEV(Toaster, {\n          message: signInStatus.msg\n        }, signInStatus.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"4IUvUxcxwb9S9q7/bhiLMJSxFJU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","logo","Backdrop","Button","CircularProgress","TextField","axios","useNavigate","Toaster","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","showLogin","setShowLogin","data","setData","name","email","password","loading","setLoading","logInStatus","setLogInStatus","signInStatus","setSignInStatus","navigate","changeHandler","e","target","value","loginHandler","config","headers","response","post","msg","key","Math","random","localStorage","setItem","JSON","stringify","error","signUpHandler","status","children","sx","color","zIndex","theme","drawer","open","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onChange","id","label","variant","onKeyDown","event","type","autoComplete","onClick","disabled","message","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/chat-app/client/src/components/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import logo from \"../assets/logo.jpeg\";\r\n// import { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Toaster from \"./Toaster\";\r\n\r\n// function Login() {\r\n//   const [showlogin, setShowLogin] = useState(false);\r\n//   const [data, setData] = useState({ name: \"\", email: \"\", password: \"\" });\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [logInStatus, setLogInStatus] = React.useState(\"\");\r\n//   const [signInStatus, setSignInStatus] = React.useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const changeHandler = (e) => {\r\n//     setData({ ...data, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const loginHandler = async (e) => {\r\n//     setLoading(true);\r\n//     console.log(data);\r\n//     try {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8080/user/login/\",\r\n//         data,\r\n//         config\r\n//       );\r\n//       console.log(\"Login : \", response);\r\n//       setLogInStatus({ msg: \"Success\", key: Math.random() });\r\n//       setLoading(false);\r\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\r\n//       navigate(\"/app/welcome\");\r\n//     } catch (error) {\r\n//       setLogInStatus({\r\n//         msg: \"Invalid User name or Password\",\r\n//         key: Math.random(),\r\n//       });\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   // const signUpHandler = async () => {\r\n//   //   setLoading(true);\r\n//   //   try {\r\n//   //     const config = {\r\n//   //       headers: {\r\n//   //         \"Content-type\": \"application/json\",\r\n//   //       },\r\n//   //     };\r\n\r\n//   //     const response = await axios.post(\r\n//   //       \"http://localhost:8080/user/register/\",\r\n//   //       data,\r\n//   //       config\r\n//   //     );\r\n//   //     console.log(response);\r\n//   //     setSignInStatus({ msg: \"Success\", key: Math.random() });\r\n//   //     navigate(\"/app/welcome\");\r\n//   //     localStorage.setItem(\"userData\", JSON.stringify(response));\r\n//   //     setLoading(false);\r\n//   //   } catch (error) {\r\n//   //     console.log(error);\r\n//   //     if (error.response.status === 405) {\r\n//   //       setLogInStatus({\r\n//   //         msg: \"User with this email ID already Exists\",\r\n//   //         key: Math.random(),\r\n//   //       });\r\n//   //     }\r\n//   //     if (error.response.status === 406) {\r\n//   //       setLogInStatus({\r\n//   //         msg: \"User Name already Taken, Please take another one\",\r\n//   //         key: Math.random(),\r\n//   //       });\r\n//   //     }\r\n//   //     setLoading(false);\r\n//   //   }\r\n//   // };\r\n\r\n//   const signUpHandler = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n  \r\n//       const response = await axios.post(\r\n//         \"http://localhost:8080/user/register/\",\r\n//         data,\r\n//         config\r\n//       );\r\n//       console.log(response);\r\n  \r\n//       if (response && response.status === 200) {\r\n//         setSignInStatus({ msg: \"Success\", key: Math.random() });\r\n//         localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n//         navigate(\"/app/welcome\");\r\n//       } else {\r\n//         setSignInStatus({\r\n//           msg: \"Unexpected response from the server\",\r\n//           key: Math.random(),\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       if (error.response) {\r\n//         if (error.response.status === 405) {\r\n//           setSignInStatus({\r\n//             msg: \"User with this email ID already Exists\",\r\n//             key: Math.random(),\r\n//           });\r\n//         } else if (error.response.status === 406) {\r\n//           setSignInStatus({\r\n//             msg: \"User Name already Taken, Please take another one\",\r\n//             key: Math.random(),\r\n//           });\r\n//         } else {\r\n//           setSignInStatus({\r\n//             msg: `Error: ${error.response.status} - ${error.response.data.message}`,\r\n//             key: Math.random(),\r\n//           });\r\n//         }\r\n//       } else {\r\n//         setSignInStatus({\r\n//           msg: \"Network error or server is not responding\",\r\n//           key: Math.random(),\r\n//         });\r\n//       }\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n  \r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <Backdrop\r\n//         sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n//         open={loading}\r\n//       >\r\n//         <CircularProgress color=\"secondary\" />\r\n//       </Backdrop>\r\n//       <div className=\"login-container\">\r\n//         <div className=\"image-container\">\r\n//           <img src={logo} alt=\"Logo\" className=\"welcome-logo\" />\r\n//         </div>\r\n//         {showlogin && (\r\n//           <div className=\"login-box\">\r\n//             <p className=\"login-text\">Login to your Account</p>\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter User Name\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"name\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   loginHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"outlined-password-input\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               autoComplete=\"current-password\"\r\n//               color=\"secondary\"\r\n//               name=\"password\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   loginHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               onClick={loginHandler}\r\n//               isLoading\r\n//             >\r\n//               Login\r\n//             </Button>\r\n//             <p>\r\n//               Don't have an Account ?{\" \"}\r\n//               <span\r\n//                 className=\"hyper\"\r\n//                 onClick={() => {\r\n//                   setShowLogin(false);\r\n//                 }}\r\n//               >\r\n//                 Sign Up\r\n//               </span>\r\n//             </p>\r\n//             {logInStatus ? (\r\n//               <Toaster key={logInStatus.key} message={logInStatus.msg} />\r\n//             ) : null}\r\n//           </div>\r\n//         )}\r\n//         {!showlogin && (\r\n//           <div className=\"login-box\">\r\n//             <p className=\"login-text\">Create your Account</p>\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter User Name\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"name\"\r\n//               helperText=\"\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter Email Address\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"email\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"outlined-password-input\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               autoComplete=\"current-password\"\r\n//               color=\"secondary\"\r\n//               name=\"password\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               onClick={signUpHandler}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <p>\r\n//               Already have an Account ?\r\n//               <span\r\n//                 className=\"hyper\"\r\n//                 onClick={() => {\r\n//                   setShowLogin(true);\r\n//                 }}\r\n//               >\r\n//                 Log in\r\n//               </span>\r\n//             </p>\r\n//             {signInStatus ? (\r\n//               <Toaster key={signInStatus.key} message={signInStatus.msg} />\r\n//             ) : null}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from \"react\";\r\nimport logo from \"../assets/logo.jpeg\";\r\nimport { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Toaster from \"./Toaster\";\r\n\r\nfunction Login() {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [data, setData] = useState({ name: \"\", email: \"\", password: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [logInStatus, setLogInStatus] = useState(\"\");\r\n  const [signInStatus, setSignInStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const changeHandler = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginHandler = async (e) => {\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/user/login/\",\r\n        data,\r\n        config\r\n      );\r\n      setLogInStatus({ msg: \"Success\", key: Math.random() });\r\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n      navigate(\"/app/welcome\");\r\n    } catch (error) {\r\n      setLogInStatus({\r\n        msg: \"Invalid Username or Password\",\r\n        key: Math.random(),\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const signUpHandler = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/user/register/\",\r\n        data,\r\n        config\r\n      );\r\n      setSignInStatus({ msg: \"Success\", key: Math.random() });\r\n      localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n      navigate(\"/app/welcome\");\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 405) {\r\n        setSignInStatus({\r\n          msg: \"User with this email ID already exists\",\r\n          key: Math.random(),\r\n        });\r\n      } else if (error.response && error.response.status === 406) {\r\n        setSignInStatus({\r\n          msg: \"Username already taken, please choose another one\",\r\n          key: Math.random(),\r\n        });\r\n      } else {\r\n        setSignInStatus({\r\n          msg: \"Unexpected error occurred. Please try again.\",\r\n          key: Math.random(),\r\n        });\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={loading}\r\n      >\r\n        <CircularProgress color=\"secondary\" />\r\n      </Backdrop>\r\n      <div className=\"login-container\">\r\n        <div className=\"image-container\">\r\n          <img src={logo} alt=\"Logo\" className=\"welcome-logo\" />\r\n        </div>\r\n        {showLogin && (\r\n          <div className=\"login-box\">\r\n            <p className=\"login-text\">Login to your Account</p>\r\n            <TextField\r\n              onChange={changeHandler}\r\n              id=\"standard-basic\"\r\n              label=\"Enter Username\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              name=\"name\"\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  loginHandler();\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              onChange={changeHandler}\r\n              id=\"outlined-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              color=\"secondary\"\r\n              name=\"password\"\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  loginHandler();\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </Button>\r\n            <p>\r\n              Don't have an Account?{\" \"}\r\n              <span\r\n                className=\"hyper\"\r\n                onClick={() => setShowLogin(false)}\r\n              >\r\n                Sign Up\r\n              </span>\r\n            </p>\r\n            {logInStatus ? (\r\n              <Toaster key={logInStatus.key} message={logInStatus.msg} />\r\n            ) : null}\r\n          </div>\r\n        )}\r\n        {!showLogin && (\r\n          <div className=\"login-box\">\r\n            <p className=\"login-text\">Create your Account</p>\r\n            <TextField\r\n              onChange={changeHandler}\r\n              id=\"standard-basic\"\r\n              label=\"Enter Username\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              name=\"name\"\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  signUpHandler();\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              onChange={changeHandler}\r\n              id=\"standard-basic\"\r\n              label=\"Enter Email Address\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              name=\"email\"\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  signUpHandler();\r\n                }\r\n              }}\r\n            />\r\n            <TextField\r\n              onChange={changeHandler}\r\n              id=\"outlined-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              color=\"secondary\"\r\n              name=\"password\"\r\n              onKeyDown={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  signUpHandler();\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={signUpHandler}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <p>\r\n              Already have an Account?{\" \"}\r\n              <span\r\n                className=\"hyper\"\r\n                onClick={() => setShowLogin(true)}\r\n              >\r\n                Log in\r\n              </span>\r\n            </p>\r\n            {signInStatus ? (\r\n              <Toaster key={signInStatus.key} message={signInStatus.msg} />\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}