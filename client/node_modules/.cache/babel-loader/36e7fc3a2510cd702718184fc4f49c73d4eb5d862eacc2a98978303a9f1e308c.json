{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\chat-app\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import logo from \"../assets/logo.jpeg\";\n// import { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import Toaster from \"./Toaster\";\n\n// function Login() {\n//   const [showlogin, setShowLogin] = useState(false);\n//   const [data, setData] = useState({ name: \"\", email: \"\", password: \"\" });\n//   const [loading, setLoading] = useState(false);\n\n//   const [logInStatus, setLogInStatus] = React.useState(\"\");\n//   const [signInStatus, setSignInStatus] = React.useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const changeHandler = (e) => {\n//     setData({ ...data, [e.target.name]: e.target.value });\n//   };\n\n//   const loginHandler = async (e) => {\n//     setLoading(true);\n//     console.log(data);\n//     try {\n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n\n//       const response = await axios.post(\n//         \"http://localhost:5000/user/login/\",\n//         data,\n//         config\n//       );\n//       console.log(\"Login : \", response);\n//       setLogInStatus({ msg: \"Success\", key: Math.random() });\n//       setLoading(false);\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\n//       navigate(\"/app/welcome\");\n//     } catch (error) {\n//       setLogInStatus({\n//         msg: \"Invalid User name or Password\",\n//         key: Math.random(),\n//       });\n//     }\n//     setLoading(false);\n//   };\n\n//   const signUpHandler = async () => {\n//     setLoading(true);\n//     try {\n//       const config = {\n//         headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n\n//       const response = await axios.post(\n//         \"http://localhost:5000/user/register/\",\n//         data,\n//         config\n//       );\n//       console.log(response);\n//       setSignInStatus({ msg: \"Success\", key: Math.random() });\n//       navigate(\"/app/welcome\");\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\n//       setLoading(false);\n//     } catch (error) {\n//       console.log(error);\n//       if (error.response.status === 405) {\n//         setLogInStatus({\n//           msg: \"User with this email ID already Exists\",\n//           key: Math.random(),\n//         });\n//       }\n//       if (error.response.status === 406) {\n//         setLogInStatus({\n//           msg: \"User Name already Taken, Please take another one\",\n//           key: Math.random(),\n//         });\n//       }\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Backdrop\n//         sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n//         open={loading}\n//       >\n//         <CircularProgress color=\"secondary\" />\n//       </Backdrop>\n//       <div className=\"login-container\">\n//         <div className=\"image-container\">\n//           <img src={logo} alt=\"Logo\" className=\"welcome-logo\" />\n//         </div>\n//         {showlogin && (\n//           <div className=\"login-box\">\n//             <p className=\"login-text\">Login to your Account</p>\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter User Name\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"name\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   loginHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"outlined-password-input\"\n//               label=\"Password\"\n//               type=\"password\"\n//               autoComplete=\"current-password\"\n//               color=\"secondary\"\n//               name=\"password\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   loginHandler();\n//                 }\n//               }}\n//             />\n//             <Button\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               onClick={loginHandler}\n//               isLoading\n//             >\n//               Login\n//             </Button>\n//             <p>\n//               Don't have an Account ?{\" \"}\n//               <span\n//                 className=\"hyper\"\n//                 onClick={() => {\n//                   setShowLogin(false);\n//                 }}\n//               >\n//                 Sign Up\n//               </span>\n//             </p>\n//             {logInStatus ? (\n//               <Toaster key={logInStatus.key} message={logInStatus.msg} />\n//             ) : null}\n//           </div>\n//         )}\n//         {!showlogin && (\n//           <div className=\"login-box\">\n//             <p className=\"login-text\">Create your Account</p>\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter User Name\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"name\"\n//               helperText=\"\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"standard-basic\"\n//               label=\"Enter Email Address\"\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               name=\"email\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <TextField\n//               onChange={changeHandler}\n//               id=\"outlined-password-input\"\n//               label=\"Password\"\n//               type=\"password\"\n//               autoComplete=\"current-password\"\n//               color=\"secondary\"\n//               name=\"password\"\n//               onKeyDown={(event) => {\n//                 if (event.code == \"Enter\") {\n//                   // console.log(event);\n//                   signUpHandler();\n//                 }\n//               }}\n//             />\n//             <Button\n//               variant=\"outlined\"\n//               color=\"secondary\"\n//               onClick={signUpHandler}\n//             >\n//               Sign Up\n//             </Button>\n//             <p>\n//               Already have an Account ?\n//               <span\n//                 className=\"hyper\"\n//                 onClick={() => {\n//                   setShowLogin(true);\n//                 }}\n//               >\n//                 Log in\n//               </span>\n//             </p>\n//             {signInStatus ? (\n//               <Toaster key={signInStatus.key} message={signInStatus.msg} />\n//             ) : null}\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useLoginUserMutation } from '../features/apislice';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginUser] = useLoginUserMutation();\n  const history = useHistory();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const user = await loginUser({\n        email,\n        password\n      }).unwrap();\n      // Handle successful login, e.g., store user info in local storage\n      localStorage.setItem('userInfo', JSON.stringify(user));\n      history.push('/');\n    } catch (error) {\n      console.error('Failed to login: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"nj6XJPN+J+m0vO8jJbFFL8lEDtI=\", false, function () {\n  return [useLoginUserMutation, useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useLoginUserMutation","useHistory","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loginUser","history","handleSubmit","e","preventDefault","user","unwrap","localStorage","setItem","JSON","stringify","push","error","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/chat-app/client/src/components/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import logo from \"../assets/logo.jpeg\";\r\n// import { Backdrop, Button, CircularProgress, TextField } from \"@mui/material\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Toaster from \"./Toaster\";\r\n\r\n// function Login() {\r\n//   const [showlogin, setShowLogin] = useState(false);\r\n//   const [data, setData] = useState({ name: \"\", email: \"\", password: \"\" });\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [logInStatus, setLogInStatus] = React.useState(\"\");\r\n//   const [signInStatus, setSignInStatus] = React.useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const changeHandler = (e) => {\r\n//     setData({ ...data, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const loginHandler = async (e) => {\r\n//     setLoading(true);\r\n//     console.log(data);\r\n//     try {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n\r\n//       const response = await axios.post(\r\n//         \"http://localhost:5000/user/login/\",\r\n//         data,\r\n//         config\r\n//       );\r\n//       console.log(\"Login : \", response);\r\n//       setLogInStatus({ msg: \"Success\", key: Math.random() });\r\n//       setLoading(false);\r\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\r\n//       navigate(\"/app/welcome\");\r\n//     } catch (error) {\r\n//       setLogInStatus({\r\n//         msg: \"Invalid User name or Password\",\r\n//         key: Math.random(),\r\n//       });\r\n//     }\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   const signUpHandler = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n\r\n//       const response = await axios.post(\r\n//         \"http://localhost:5000/user/register/\",\r\n//         data,\r\n//         config\r\n//       );\r\n//       console.log(response);\r\n//       setSignInStatus({ msg: \"Success\", key: Math.random() });\r\n//       navigate(\"/app/welcome\");\r\n//       localStorage.setItem(\"userData\", JSON.stringify(response));\r\n//       setLoading(false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       if (error.response.status === 405) {\r\n//         setLogInStatus({\r\n//           msg: \"User with this email ID already Exists\",\r\n//           key: Math.random(),\r\n//         });\r\n//       }\r\n//       if (error.response.status === 406) {\r\n//         setLogInStatus({\r\n//           msg: \"User Name already Taken, Please take another one\",\r\n//           key: Math.random(),\r\n//         });\r\n//       }\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Backdrop\r\n//         sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n//         open={loading}\r\n//       >\r\n//         <CircularProgress color=\"secondary\" />\r\n//       </Backdrop>\r\n//       <div className=\"login-container\">\r\n//         <div className=\"image-container\">\r\n//           <img src={logo} alt=\"Logo\" className=\"welcome-logo\" />\r\n//         </div>\r\n//         {showlogin && (\r\n//           <div className=\"login-box\">\r\n//             <p className=\"login-text\">Login to your Account</p>\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter User Name\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"name\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   loginHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"outlined-password-input\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               autoComplete=\"current-password\"\r\n//               color=\"secondary\"\r\n//               name=\"password\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   loginHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               onClick={loginHandler}\r\n//               isLoading\r\n//             >\r\n//               Login\r\n//             </Button>\r\n//             <p>\r\n//               Don't have an Account ?{\" \"}\r\n//               <span\r\n//                 className=\"hyper\"\r\n//                 onClick={() => {\r\n//                   setShowLogin(false);\r\n//                 }}\r\n//               >\r\n//                 Sign Up\r\n//               </span>\r\n//             </p>\r\n//             {logInStatus ? (\r\n//               <Toaster key={logInStatus.key} message={logInStatus.msg} />\r\n//             ) : null}\r\n//           </div>\r\n//         )}\r\n//         {!showlogin && (\r\n//           <div className=\"login-box\">\r\n//             <p className=\"login-text\">Create your Account</p>\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter User Name\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"name\"\r\n//               helperText=\"\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"standard-basic\"\r\n//               label=\"Enter Email Address\"\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               name=\"email\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               onChange={changeHandler}\r\n//               id=\"outlined-password-input\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               autoComplete=\"current-password\"\r\n//               color=\"secondary\"\r\n//               name=\"password\"\r\n//               onKeyDown={(event) => {\r\n//                 if (event.code == \"Enter\") {\r\n//                   // console.log(event);\r\n//                   signUpHandler();\r\n//                 }\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"outlined\"\r\n//               color=\"secondary\"\r\n//               onClick={signUpHandler}\r\n//             >\r\n//               Sign Up\r\n//             </Button>\r\n//             <p>\r\n//               Already have an Account ?\r\n//               <span\r\n//                 className=\"hyper\"\r\n//                 onClick={() => {\r\n//                   setShowLogin(true);\r\n//                 }}\r\n//               >\r\n//                 Log in\r\n//               </span>\r\n//             </p>\r\n//             {signInStatus ? (\r\n//               <Toaster key={signInStatus.key} message={signInStatus.msg} />\r\n//             ) : null}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useLoginUserMutation } from '../features/apislice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginUser] = useLoginUserMutation();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const user = await loginUser({ email, password }).unwrap();\r\n      // Handle successful login, e.g., store user info in local storage\r\n      localStorage.setItem('userInfo', JSON.stringify(user));\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.error('Failed to login: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,CAAC,GAAGV,oBAAoB,CAAC,CAAC;EAC1C,MAAMW,OAAO,GAAGV,UAAU,CAAC,CAAC;EAE5B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,IAAI,GAAG,MAAML,SAAS,CAAC;QAAEJ,KAAK;QAAEE;MAAS,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAC;MAC1D;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;MACtDJ,OAAO,CAACU,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMqB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3BtB,OAAA;MACEuB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEtB,KAAM;MACbuB,QAAQ,EAAGhB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF/B,OAAA;MACEuB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGhB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF/B,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAnCID,KAAK;EAAA,QAGWJ,oBAAoB,EACxBC,UAAU;AAAA;AAAAkC,EAAA,GAJtB/B,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}