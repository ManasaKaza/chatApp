{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\chat-app\\\\client\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import AccountCircleIcon from '@mui/icons-material/AccountCircle';\n// import PersonAddIcon from '@mui/icons-material/PersonAdd';\n// import GroupAddIcon from '@mui/icons-material/GroupAdd';\n// import AddCircleIcon from '@mui/icons-material/AddCircle';\n// import NightlightIcon from '@mui/icons-material/Nightlight';\n// import LightModeIcon from '@mui/icons-material/LightMode';\n// import SearchIcon from '@mui/icons-material/Search';\n// import { IconButton } from '@mui/material';\n// import \"./style.css\";\n// import ConversationItem from './ConversationItem';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { toggleTheme } from '../features/themeSlice'\n\n// function Sidebar() {\n\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch()\n//     const lightTheme =  useSelector((state) => state.themeKey);\n//     // const [lightTheme,setLightTheme] = useState(true);\n//     const [conversations, setConversations] = useState([\n//         {\n//           name: \"John Doe\",\n//           lastMessage: \"Hello!\",\n//           timeStamp: \"now\",\n//         },\n//         {\n//           name: \"Jane Smith\",\n//           lastMessage: \"How are you?\",\n//           timeStamp: \"10m ago\",\n//         },\n//         {\n//           name: \"Alice Johnson\",\n//           lastMessage: \"See you later!\",\n//           timeStamp: \"1h ago\",\n//         },\n//       ]);\n\n//     return (\n//         <div className={`sidebar-container ${lightTheme ? '' : 'dark'}`}>\n//             <div className={`sidebar-header ${lightTheme ? '' : 'dark'}`}>\n//                 <div className='icons'>\n//                     {/* <div> */}\n//                     <IconButton title='Profile'>\n//                         <AccountCircleIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\n//                     </IconButton>\n//                 {/* </div> */}\n//                 {/* <div> */}\n//                     <IconButton onClick={() => { navigate('users') }} title='Users'>\n//                         <PersonAddIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\n//                     </IconButton>\n//                     <IconButton onClick={() => { navigate('groups') }} title='Groups'>\n//                         <GroupAddIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\n//                     </IconButton>\n//                     <IconButton onClick={() => { navigate('create-groups') }} title='Create Groups'>\n//                         <AddCircleIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\n//                     </IconButton>\n//                     <IconButton onClick={() => {dispatch(toggleTheme())}} title='Theme'>\n//                         { lightTheme ? <NightlightIcon /> : <LightModeIcon className={`icon ${lightTheme ? '' : 'dark'}`} /> }\n//                     </IconButton>\n//                 {/* </div> */}\n//                 </div>\n//             </div>\n//             <div className={`sidebar-search ${lightTheme ? '' : 'dark'}`}>\n//                 <IconButton>\n//                     <SearchIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\n//                 </IconButton>\n//                 <input type=\"text\" placeholder='Search' className='search-box' />\n//             </div>\n//             <div className={`sidebar-conversations ${lightTheme ? '' : 'dark'}`}>\n//                 {conversations.map((conversation) => {\n//                     return <ConversationItem props={conversation} key={conversation.name} />\n//                 })}\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Sidebar\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport { IconButton } from \"@mui/material\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport NightlightIcon from \"@mui/icons-material/Nightlight\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleTheme } from \"../features/themeSlice\";\nimport axios from \"axios\";\nimport { refreshSidebarFun } from \"../features/refreshSidebar\";\nimport { myContext } from \"./MainContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const lightTheme = useSelector(state => state.themeKey);\n  // const refresh = useSelector((state) => state.refreshKey);\n  const {\n    refresh,\n    setRefresh\n  } = useContext(myContext);\n  console.log(\"Context API : refresh : \", refresh);\n  const [conversations, setConversations] = useState([]);\n  // console.log(\"Conversations of Sidebar : \", conversations);\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n  // console.log(\"Data from LocalStorage : \", userData);\n  const nav = useNavigate();\n  if (!userData) {\n    console.log(\"User not Authenticated\");\n    nav(\"/\");\n  }\n  const user = userData.data;\n  useEffect(() => {\n    // console.log(\"Sidebar : \", user.token);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    };\n    axios.get(\"http://localhost:8080/chat/\", config).then(response => {\n      console.log(\"Data refresh in sidebar \", response.data);\n      setConversations(response.data);\n      // setRefresh(!refresh);\n    });\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sb-header\" + (lightTheme ? \"\" : \" dark\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"other-icons\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            nav(\"/app/welcome\");\n          },\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            navigate(\"users\");\n          },\n          children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            navigate(\"groups\");\n          },\n          children: /*#__PURE__*/_jsxDEV(GroupAddIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            navigate(\"create-groups\");\n          },\n          children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            dispatch(toggleTheme());\n          },\n          children: [lightTheme && /*#__PURE__*/_jsxDEV(NightlightIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), !lightTheme && /*#__PURE__*/_jsxDEV(LightModeIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            localStorage.removeItem(\"userData\");\n            navigate(\"/\");\n          },\n          children: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n            className: \"icon\" + (lightTheme ? \"\" : \" dark\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sb-search\" + (lightTheme ? \"\" : \" dark\"),\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"icon\" + (lightTheme ? \"\" : \" dark\"),\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search\",\n        className: \"search-box\" + (lightTheme ? \"\" : \" dark\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sb-conversations\" + (lightTheme ? \"\" : \" dark\"),\n      children: conversations.map((conversation, index) => {\n        // console.log(\"current convo : \", conversation);\n        if (conversation.users.length === 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 20\n          }, this);\n        }\n        if (conversation.latestMessage === undefined) {\n          // console.log(\"No Latest Message with \", conversation.users[1]);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              console.log(\"Refresh fired from sidebar\");\n              // dispatch(refreshSidebarFun());\n              setRefresh(!refresh);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-container\",\n              onClick: () => {\n                navigate(\"chat/\" + conversation._id + \"&\" + conversation.users[1].name);\n              }\n              // dispatch change to refresh so as to update chatArea\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"con-icon\" + (lightTheme ? \"\" : \" dark\"),\n                children: conversation.users[1].name[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"con-title\" + (lightTheme ? \"\" : \" dark\"),\n                children: conversation.users[1].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"con-lastMessage\",\n                children: \"No previous Messages, click here to start a new chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-container\",\n            onClick: () => {\n              navigate(\"chat/\" + conversation._id + \"&\" + conversation.users[1].name);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"con-icon\" + (lightTheme ? \"\" : \" dark\"),\n              children: conversation.users[1].name[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"con-title\" + (lightTheme ? \"\" : \" dark\"),\n              children: conversation.users[1].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"con-lastMessage\",\n              children: conversation.latestMessage.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"d0Bx4iGBkDPmq5UQOhbMYP3EHes=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useNavigate];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AccountCircleIcon","IconButton","PersonAddIcon","GroupAddIcon","NightlightIcon","LightModeIcon","ExitToAppIcon","AddCircleIcon","SearchIcon","useNavigate","useDispatch","useSelector","toggleTheme","axios","refreshSidebarFun","myContext","jsxDEV","_jsxDEV","Sidebar","_s","navigate","dispatch","lightTheme","state","themeKey","refresh","setRefresh","console","log","conversations","setConversations","userData","JSON","parse","localStorage","getItem","nav","user","data","config","headers","Authorization","token","get","then","response","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","removeItem","placeholder","map","conversation","index","users","length","latestMessage","undefined","_id","name","content","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/chat-app/client/src/components/Sidebar.js"],"sourcesContent":["// import React, { useState } from 'react'\r\n// import AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n// import PersonAddIcon from '@mui/icons-material/PersonAdd';\r\n// import GroupAddIcon from '@mui/icons-material/GroupAdd';\r\n// import AddCircleIcon from '@mui/icons-material/AddCircle';\r\n// import NightlightIcon from '@mui/icons-material/Nightlight';\r\n// import LightModeIcon from '@mui/icons-material/LightMode';\r\n// import SearchIcon from '@mui/icons-material/Search';\r\n// import { IconButton } from '@mui/material';\r\n// import \"./style.css\";\r\n// import ConversationItem from './ConversationItem';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { toggleTheme } from '../features/themeSlice'\r\n\r\n\r\n// function Sidebar() {\r\n\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch()\r\n//     const lightTheme =  useSelector((state) => state.themeKey);\r\n//     // const [lightTheme,setLightTheme] = useState(true);\r\n//     const [conversations, setConversations] = useState([\r\n//         {\r\n//           name: \"John Doe\",\r\n//           lastMessage: \"Hello!\",\r\n//           timeStamp: \"now\",\r\n//         },\r\n//         {\r\n//           name: \"Jane Smith\",\r\n//           lastMessage: \"How are you?\",\r\n//           timeStamp: \"10m ago\",\r\n//         },\r\n//         {\r\n//           name: \"Alice Johnson\",\r\n//           lastMessage: \"See you later!\",\r\n//           timeStamp: \"1h ago\",\r\n//         },\r\n//       ]);\r\n    \r\n\r\n//     return (\r\n//         <div className={`sidebar-container ${lightTheme ? '' : 'dark'}`}>\r\n//             <div className={`sidebar-header ${lightTheme ? '' : 'dark'}`}>\r\n//                 <div className='icons'>\r\n//                     {/* <div> */}\r\n//                     <IconButton title='Profile'>\r\n//                         <AccountCircleIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\r\n//                     </IconButton>\r\n//                 {/* </div> */}\r\n//                 {/* <div> */}\r\n//                     <IconButton onClick={() => { navigate('users') }} title='Users'>\r\n//                         <PersonAddIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\r\n//                     </IconButton>\r\n//                     <IconButton onClick={() => { navigate('groups') }} title='Groups'>\r\n//                         <GroupAddIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\r\n//                     </IconButton>\r\n//                     <IconButton onClick={() => { navigate('create-groups') }} title='Create Groups'>\r\n//                         <AddCircleIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\r\n//                     </IconButton>\r\n//                     <IconButton onClick={() => {dispatch(toggleTheme())}} title='Theme'>\r\n//                         { lightTheme ? <NightlightIcon /> : <LightModeIcon className={`icon ${lightTheme ? '' : 'dark'}`} /> }\r\n//                     </IconButton>\r\n//                 {/* </div> */}\r\n//                 </div>\r\n//             </div>\r\n//             <div className={`sidebar-search ${lightTheme ? '' : 'dark'}`}>\r\n//                 <IconButton>\r\n//                     <SearchIcon className={`icon ${lightTheme ? '' : 'dark'}`} />\r\n//                 </IconButton>\r\n//                 <input type=\"text\" placeholder='Search' className='search-box' />\r\n//             </div>\r\n//             <div className={`sidebar-conversations ${lightTheme ? '' : 'dark'}`}>\r\n//                 {conversations.map((conversation) => {\r\n//                     return <ConversationItem props={conversation} key={conversation.name} />\r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Sidebar\r\n\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\r\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\r\nimport NightlightIcon from \"@mui/icons-material/Nightlight\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleTheme } from \"../features/themeSlice\";\r\nimport axios from \"axios\";\r\nimport { refreshSidebarFun } from \"../features/refreshSidebar\";\r\nimport { myContext } from \"./MainContainer\";\r\n\r\nfunction Sidebar() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const lightTheme = useSelector((state) => state.themeKey);\r\n  // const refresh = useSelector((state) => state.refreshKey);\r\n  const { refresh, setRefresh } = useContext(myContext);\r\n  console.log(\"Context API : refresh : \", refresh);\r\n  const [conversations, setConversations] = useState([]);\r\n  // console.log(\"Conversations of Sidebar : \", conversations);\r\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n  // console.log(\"Data from LocalStorage : \", userData);\r\n  const nav = useNavigate();\r\n  if (!userData) {\r\n    console.log(\"User not Authenticated\");\r\n    nav(\"/\");\r\n  }\r\n\r\n  const user = userData.data;\r\n  useEffect(() => {\r\n    // console.log(\"Sidebar : \", user.token);\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n\r\n    axios.get(\"http://localhost:8080/chat/\", config).then((response) => {\r\n      console.log(\"Data refresh in sidebar \", response.data);\r\n      setConversations(response.data);\r\n      // setRefresh(!refresh);\r\n    });\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className={\"sb-header\" + (lightTheme ? \"\" : \" dark\")}>\r\n        <div className=\"other-icons\">\r\n          <IconButton\r\n            onClick={() => {\r\n              nav(\"/app/welcome\");\r\n            }}\r\n          >\r\n            <AccountCircleIcon\r\n              className={\"icon\" + (lightTheme ? \"\" : \" dark\")}\r\n            />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              navigate(\"users\");\r\n            }}\r\n          >\r\n            <PersonAddIcon className={\"icon\" + (lightTheme ? \"\" : \" dark\")} />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              navigate(\"groups\");\r\n            }}\r\n          >\r\n            <GroupAddIcon className={\"icon\" + (lightTheme ? \"\" : \" dark\")} />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              navigate(\"create-groups\");\r\n            }}\r\n          >\r\n            <AddCircleIcon className={\"icon\" + (lightTheme ? \"\" : \" dark\")} />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(toggleTheme());\r\n            }}\r\n          >\r\n            {lightTheme && (\r\n              <NightlightIcon\r\n                className={\"icon\" + (lightTheme ? \"\" : \" dark\")}\r\n              />\r\n            )}\r\n            {!lightTheme && (\r\n              <LightModeIcon className={\"icon\" + (lightTheme ? \"\" : \" dark\")} />\r\n            )}\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              localStorage.removeItem(\"userData\");\r\n              navigate(\"/\");\r\n            }}\r\n          >\r\n            <ExitToAppIcon className={\"icon\" + (lightTheme ? \"\" : \" dark\")} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={\"sb-search\" + (lightTheme ? \"\" : \" dark\")}>\r\n        <IconButton className={\"icon\" + (lightTheme ? \"\" : \" dark\")}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <input\r\n          placeholder=\"Search\"\r\n          className={\"search-box\" + (lightTheme ? \"\" : \" dark\")}\r\n        />\r\n      </div>\r\n      <div className={\"sb-conversations\" + (lightTheme ? \"\" : \" dark\")}>\r\n        {conversations.map((conversation, index) => {\r\n          // console.log(\"current convo : \", conversation);\r\n          if (conversation.users.length === 1) {\r\n            return <div key={index}></div>;\r\n          }\r\n          if (conversation.latestMessage === undefined) {\r\n            // console.log(\"No Latest Message with \", conversation.users[1]);\r\n            return (\r\n              <div\r\n                key={index}\r\n                onClick={() => {\r\n                  console.log(\"Refresh fired from sidebar\");\r\n                  // dispatch(refreshSidebarFun());\r\n                  setRefresh(!refresh);\r\n                }}\r\n              >\r\n                <div\r\n                  key={index}\r\n                  className=\"conversation-container\"\r\n                  onClick={() => {\r\n                    navigate(\r\n                      \"chat/\" +\r\n                        conversation._id +\r\n                        \"&\" +\r\n                        conversation.users[1].name\r\n                    );\r\n                  }}\r\n                  // dispatch change to refresh so as to update chatArea\r\n                >\r\n                  <p className={\"con-icon\" + (lightTheme ? \"\" : \" dark\")}>\r\n                    {conversation.users[1].name[0]}\r\n                  </p>\r\n                  <p className={\"con-title\" + (lightTheme ? \"\" : \" dark\")}>\r\n                    {conversation.users[1].name}\r\n                  </p>\r\n\r\n                  <p className=\"con-lastMessage\">\r\n                    No previous Messages, click here to start a new chat\r\n                  </p>\r\n                  {/* <p className={\"con-timeStamp\" + (lightTheme ? \"\" : \" dark\")}>\r\n                {conversation.timeStamp}\r\n              </p> */}\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"conversation-container\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    \"chat/\" +\r\n                      conversation._id +\r\n                      \"&\" +\r\n                      conversation.users[1].name\r\n                  );\r\n                }}\r\n              >\r\n                <p className={\"con-icon\" + (lightTheme ? \"\" : \" dark\")}>\r\n                  {conversation.users[1].name[0]}\r\n                </p>\r\n                <p className={\"con-title\" + (lightTheme ? \"\" : \" dark\")}>\r\n                  {conversation.users[1].name}\r\n                </p>\r\n\r\n                <p className=\"con-lastMessage\">\r\n                  {conversation.latestMessage.content}\r\n                </p>\r\n                {/* <p className={\"con-timeStamp\" + (lightTheme ? \"\" : \" dark\")}>\r\n                {conversation.timeStamp}\r\n              </p> */}\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}