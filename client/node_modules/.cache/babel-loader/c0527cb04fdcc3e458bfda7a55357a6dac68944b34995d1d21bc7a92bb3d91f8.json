{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: '/api'\n  }),\n  endpoints: builder => ({\n    loginUser: builder.mutation({\n      query: credentials => ({\n        url: 'user/login',\n        method: 'POST',\n        body: credentials\n      })\n    }),\n    registerUser: builder.mutation({\n      query: user => ({\n        url: 'user',\n        method: 'POST',\n        body: user\n      })\n    }),\n    fetchChats: builder.query({\n      query: () => 'chat'\n    }),\n    sendMessage: builder.mutation({\n      query: message => ({\n        url: 'message',\n        method: 'POST',\n        body: message\n      })\n    })\n    // Add more endpoints as needed\n  })\n});\nexport const {\n  useLoginUserMutation,\n  useRegisterUserMutation,\n  useFetchChatsQuery,\n  useSendMessageMutation\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","loginUser","mutation","query","credentials","url","method","body","registerUser","user","fetchChats","sendMessage","message","useLoginUserMutation","useRegisterUserMutation","useFetchChatsQuery","useSendMessageMutation"],"sources":["C:/Users/DELL/Downloads/chat-app/client/src/features/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\r\n  endpoints: (builder) => ({\r\n    loginUser: builder.mutation({\r\n      query: (credentials) => ({\r\n        url: 'user/login',\r\n        method: 'POST',\r\n        body: credentials,\r\n      }),\r\n    }),\r\n    registerUser: builder.mutation({\r\n      query: (user) => ({\r\n        url: 'user',\r\n        method: 'POST',\r\n        body: user,\r\n      }),\r\n    }),\r\n    fetchChats: builder.query({\r\n      query: () => 'chat',\r\n    }),\r\n    sendMessage: builder.mutation({\r\n      query: (message) => ({\r\n        url: 'message',\r\n        method: 'POST',\r\n        body: message,\r\n      }),\r\n    }),\r\n    // Add more endpoints as needed\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useLoginUserMutation,\r\n  useRegisterUserMutation,\r\n  useFetchChatsQuery,\r\n  useSendMessageMutation,\r\n} = apiSlice;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAO,CAAC,CAAC;EAC9CC,SAAS,EAAGC,OAAO,KAAM;IACvBC,SAAS,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC1BC,KAAK,EAAGC,WAAW,KAAM;QACvBC,GAAG,EAAE,YAAY;QACjBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFI,YAAY,EAAER,OAAO,CAACE,QAAQ,CAAC;MAC7BC,KAAK,EAAGM,IAAI,KAAM;QAChBJ,GAAG,EAAE,MAAM;QACXC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEE;MACR,CAAC;IACH,CAAC,CAAC;IACFC,UAAU,EAAEV,OAAO,CAACG,KAAK,CAAC;MACxBA,KAAK,EAAEA,CAAA,KAAM;IACf,CAAC,CAAC;IACFQ,WAAW,EAAEX,OAAO,CAACE,QAAQ,CAAC;MAC5BC,KAAK,EAAGS,OAAO,KAAM;QACnBP,GAAG,EAAE,SAAS;QACdC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEK;MACR,CAAC;IACH,CAAC;IACD;EACF,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXC,oBAAoB;EACpBC,uBAAuB;EACvBC,kBAAkB;EAClBC;AACF,CAAC,GAAGrB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}