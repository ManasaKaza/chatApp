{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\chat-app\\\\client\\\\src\\\\components\\\\CreateGroups.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import DoneOutlineRoundedIcon from \"@mui/icons-material/DoneOutlineRounded\";\n// import {\n//   Button,\n//   Dialog,\n//   DialogActions,\n//   DialogContent,\n//   DialogContentText,\n//   DialogTitle,\n//   IconButton,\n// } from \"@mui/material\";\n// import { useSelector } from \"react-redux\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function CreateGroups() {\n//   const lightTheme = useSelector((state) => state.themeKey);\n//   const userData = JSON.parse(localStorage.getItem(\"userData\"));\n//   // console.log(\"Data from LocalStorage : \", userData);\n//   const nav = useNavigate();\n//   if (!userData) {\n//     console.log(\"User not Authenticated\");\n//     nav(\"/\");\n//   }\n//   const user = userData.data;\n//   const [groupName, setGroupName] = useState(\"\");\n//   const [open, setOpen] = React.useState(false);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   console.log(\"User Data from CreateGroups : \", userData);\n\n//   const createGroup = () => {\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${user.token}`,\n//       },\n//     };\n\n//     axios.post(\n//       \"http://localhost:8080/chat/createGroup\",\n//       {\n//         name: groupName,\n//         users: '[\"647d94aea97e40a17278c7e5\",\"647d999e4c3dd7ca9a2e6543\"]',\n//       },\n//       config\n//     );\n//     nav(\"/app/groups\");\n//   };\n\n//   return (\n//     <>\n//       <div>\n//         <Dialog\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"alert-dialog-title\"\n//           aria-describedby=\"alert-dialog-description\"\n//         >\n//           <DialogTitle id=\"alert-dialog-title\">\n//             {\"Do you want to create a Group Named \" + groupName}\n//           </DialogTitle>\n//           <DialogContent>\n//             <DialogContentText id=\"alert-dialog-description\">\n//               This will create a create group in which you will be the admin and\n//               other will be able to join this group.\n//             </DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleClose}>Disagree</Button>\n//             <Button\n//               onClick={() => {\n//                 createGroup();\n//                 handleClose();\n//               }}\n//               autoFocus\n//             >\n//               Agree\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       </div>\n//       <div className={\"createGroups-container\" + (lightTheme ? \"\" : \" dark\")}>\n//         <input\n//           placeholder=\"Enter Group Name\"\n//           className={\"search-box\" + (lightTheme ? \"\" : \" dark\")}\n//           onChange={(e) => {\n//             setGroupName(e.target.value);\n//           }}\n//         />\n//         <IconButton\n//           className={\"icon\" + (lightTheme ? \"\" : \" dark\")}\n//           onClick={() => {\n//             handleClickOpen();\n//             // createGroup();\n//           }}\n//         >\n//           <DoneOutlineRoundedIcon />\n//         </IconButton>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default CreateGroups;\n\nimport React, { useState } from 'react';\nimport { useCreateGroupMutation } from '../features/apiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGroups = () => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [createGroup] = useCreateGroupMutation();\n  const handleCreateGroup = async e => {\n    e.preventDefault();\n    try {\n      await createGroup({\n        name: groupName\n      }).unwrap();\n      setGroupName('');\n    } catch (error) {\n      console.error('Failed to create group: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateGroup,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: groupName,\n      onChange: e => setGroupName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateGroups, \"47BSYswwW5Bp4jx9Bi9pl44cK+8=\", false, function () {\n  return [useCreateGroupMutation];\n});\n_c = CreateGroups;\nexport default CreateGroups;\nvar _c;\n$RefreshReg$(_c, \"CreateGroups\");","map":{"version":3,"names":["React","useState","useCreateGroupMutation","jsxDEV","_jsxDEV","CreateGroups","_s","groupName","setGroupName","createGroup","handleCreateGroup","e","preventDefault","name","unwrap","error","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/chat-app/client/src/components/CreateGroups.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import DoneOutlineRoundedIcon from \"@mui/icons-material/DoneOutlineRounded\";\r\n// import {\r\n//   Button,\r\n//   Dialog,\r\n//   DialogActions,\r\n//   DialogContent,\r\n//   DialogContentText,\r\n//   DialogTitle,\r\n//   IconButton,\r\n// } from \"@mui/material\";\r\n// import { useSelector } from \"react-redux\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function CreateGroups() {\r\n//   const lightTheme = useSelector((state) => state.themeKey);\r\n//   const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n//   // console.log(\"Data from LocalStorage : \", userData);\r\n//   const nav = useNavigate();\r\n//   if (!userData) {\r\n//     console.log(\"User not Authenticated\");\r\n//     nav(\"/\");\r\n//   }\r\n//   const user = userData.data;\r\n//   const [groupName, setGroupName] = useState(\"\");\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   console.log(\"User Data from CreateGroups : \", userData);\r\n\r\n//   const createGroup = () => {\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${user.token}`,\r\n//       },\r\n//     };\r\n\r\n//     axios.post(\r\n//       \"http://localhost:8080/chat/createGroup\",\r\n//       {\r\n//         name: groupName,\r\n//         users: '[\"647d94aea97e40a17278c7e5\",\"647d999e4c3dd7ca9a2e6543\"]',\r\n//       },\r\n//       config\r\n//     );\r\n//     nav(\"/app/groups\");\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <Dialog\r\n//           open={open}\r\n//           onClose={handleClose}\r\n//           aria-labelledby=\"alert-dialog-title\"\r\n//           aria-describedby=\"alert-dialog-description\"\r\n//         >\r\n//           <DialogTitle id=\"alert-dialog-title\">\r\n//             {\"Do you want to create a Group Named \" + groupName}\r\n//           </DialogTitle>\r\n//           <DialogContent>\r\n//             <DialogContentText id=\"alert-dialog-description\">\r\n//               This will create a create group in which you will be the admin and\r\n//               other will be able to join this group.\r\n//             </DialogContentText>\r\n//           </DialogContent>\r\n//           <DialogActions>\r\n//             <Button onClick={handleClose}>Disagree</Button>\r\n//             <Button\r\n//               onClick={() => {\r\n//                 createGroup();\r\n//                 handleClose();\r\n//               }}\r\n//               autoFocus\r\n//             >\r\n//               Agree\r\n//             </Button>\r\n//           </DialogActions>\r\n//         </Dialog>\r\n//       </div>\r\n//       <div className={\"createGroups-container\" + (lightTheme ? \"\" : \" dark\")}>\r\n//         <input\r\n//           placeholder=\"Enter Group Name\"\r\n//           className={\"search-box\" + (lightTheme ? \"\" : \" dark\")}\r\n//           onChange={(e) => {\r\n//             setGroupName(e.target.value);\r\n//           }}\r\n//         />\r\n//         <IconButton\r\n//           className={\"icon\" + (lightTheme ? \"\" : \" dark\")}\r\n//           onClick={() => {\r\n//             handleClickOpen();\r\n//             // createGroup();\r\n//           }}\r\n//         >\r\n//           <DoneOutlineRoundedIcon />\r\n//         </IconButton>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default CreateGroups;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useCreateGroupMutation } from '../features/apiSlice';\r\n\r\nconst CreateGroups = () => {\r\n  const [groupName, setGroupName] = useState('');\r\n  const [createGroup] = useCreateGroupMutation();\r\n\r\n  const handleCreateGroup = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await createGroup({ name: groupName }).unwrap();\r\n      setGroupName('');\r\n    } catch (error) {\r\n      console.error('Failed to create group: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreateGroup}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Group Name\"\r\n        value={groupName}\r\n        onChange={(e) => setGroupName(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Create Group</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateGroups;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,sBAAsB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,WAAW,CAAC,GAAGP,sBAAsB,CAAC,CAAC;EAE9C,MAAMQ,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMH,WAAW,CAAC;QAAEI,IAAI,EAAEN;MAAU,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;MAC/CN,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEX,OAAA;IAAMa,QAAQ,EAAEP,iBAAkB;IAAAQ,QAAA,gBAChCd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEd,SAAU;MACjBe,QAAQ,EAAGX,CAAC,IAAKH,YAAY,CAACG,CAAC,CAACY,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX,CAAC;AAACrB,EAAA,CAzBID,YAAY;EAAA,QAEMH,sBAAsB;AAAA;AAAA0B,EAAA,GAFxCvB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}